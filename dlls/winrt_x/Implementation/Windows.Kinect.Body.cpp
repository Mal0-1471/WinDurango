#include "pch.h"
#include "Windows.Kinect.Body.h"
#include "Windows.Kinect.Body.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
////static_assert(false, "This file is generated by a tool and will be overwritten. Open this error and view the comment for assistance.");

namespace winrt::Windows::Kinect::implementation
{
    int32_t Body::JointCount()
    {
        throw hresult_not_implemented();
    }
    void Body::Close()
    {
        throw hresult_not_implemented();
    }
    Foundation::Collections::IMapView<JointType, Joint> Body::Joints()
    {
        throw hresult_not_implemented();
    }
    Foundation::Collections::IMapView<JointType, JointOrientation> Body::JointOrientations()
    {
        throw hresult_not_implemented();
    }
    DetectionResult Body::Engaged()
    {
        throw hresult_not_implemented();
    }
    Foundation::Collections::IMapView<Expression, DetectionResult> Body::Expressions()
    {
        throw hresult_not_implemented();
    }
    Foundation::Collections::IMapView<Activity, DetectionResult> Body::Activities()
    {
        throw hresult_not_implemented();
    }
    Foundation::Collections::IMapView<Appearance, DetectionResult> Body::Appearance()
    {
        throw hresult_not_implemented();
    }
    HandState Body::HandLeftState()
    {
        throw hresult_not_implemented();
    }
    TrackingConfidence Body::HandLeftConfidence()
    {
        throw hresult_not_implemented();
    }
    HandState Body::HandRightState()
    {
        throw hresult_not_implemented();
    }
    TrackingConfidence Body::HandRightConfidence()
    {
        throw hresult_not_implemented();
    }
    FrameEdges Body::ClippedEdges()
    {
        throw hresult_not_implemented();
    }
    uint64_t Body::TrackingId()
    {
        throw hresult_not_implemented();
    }
    bool Body::IsTracked()
    {
        throw hresult_not_implemented();
    }
    Foundation::Point Body::Lean()
    {
        throw hresult_not_implemented();
    }
    TrackingState Body::LeanTrackingState()
    {
        throw hresult_not_implemented();
    }
}
